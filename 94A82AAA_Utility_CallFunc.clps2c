//CALL_FUNC(int function, int param 1, int param 2, int param 3...)
ASM_START 0x200
    //pull 0x10 off stack
    addiu $sp,$sp,-0x10
    //store the return address to the stack
    sd $ra, ($sp)

    //get param count
    jal 0x0035f140
    nop
    move $s2, $v0
    ble $s2, 0x3, exit
    nop
    //acquire function address from param 0
    move $a0, $zero
    jal 0x0035ed20
    nop
    move $s0, $v0

    //acquire params 2-x
    li $s1, 0x2
    li $s3, 0x0022825 //writes the instruction "or $a1, $zero, $v0" This instruction will be rewritten until all argument registers are full or all parameters have been spilled 
    startloop: beq $s1, $s2, endloop
    move $a0, $s1
    jal 0x0035ed20
    nop
    sw $s3, 0x4($pc)
    nop //this instruction will be rewritten prior to execution - this needs to be deleted from the patch or set to 0
    addiu $s1, $s1, 0x1
    addiu $s3, $s3, 0x800
    b startloop
    endloop:nop

    //acquire param 1
    li $a0, 0x1
    jal 0x0035ed20
    nop
    move $a0, $v0

    //call function
    jal $s0
    nop
    //load return address off the stack
    ld $ra, ($sp)
    //add 0x10 back to the stack
    addiu $sp,$sp,0x10
    //return
    jr $ra
    nop
ASM_END